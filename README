Jazda is a bicycle computer based on AVR microcontrollers and mobile phone screens. The project covers both the software and hardware design, providing the source code and schematics.
Originally, it was built around AtTiny2313, now it's AtMega8. The microcontrollers were chosen because of their popularity and resistance to damage.
The other significant component is the screen. The project aims to be compatible with at least a few popular low-powered displays in the future, but at the moment only one is supported.

Project page:
https://github.com/rhn/jazda
Project wiki:
https://github.com/rhn/jazda/wiki/
Introduction, tutorial and hardware documents:
http://rhn.github.com/jazda/

FEATURES

calculates distance with arbitrary precision (set before compilation)
calculates speed at every impulse with arbitrary precision (set before compilation)
smooth speed decreasing when no pulses come in (wheel stopped)
modular design

HARDWARE REQUIREMENTS

LPH7366 display (Philips PCD8544 LCD driver)
  - 9-pin flex tape or a PCB with 1mm-spaced solder pads
  - 1x 1µF capacitor
  OR
  Nokia 5110 display module off eBay
Atmel AtMega8 microcontroller
3x button
4x ~1µF capacitors (depends on switches quality)
SN74xx280 or any other parity generator
3x ?Ω resistors (pull-up) 
3V power supply (2x1.2V batteries work fine)

SOFTWARE REQUIREMENTS

gcc avr cross-compiler
avr-libc
avrdude
bash (for installation only)

SOFTWARE INSTALLATION

The software has been tested on Linux only.
To compile and download the software to the chip, go to src/ directory and run the command:

../build.sh usbasp m8 main.c

replacing usbasp with the name of your programmer (refer to avrdude manual to find it).
For further information, refer to build.sh source code.

Notes regarding parity generator:
The generator is be connected to buttons which are filtered with capacitors. The resut is that it may generate some noise on output, and therefore, excessive interrupts. This is however handled by interrupt emulation mechanism and shouldn't ever be a problem.
